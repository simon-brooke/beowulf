;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Beowulf  Sysout file generated at 2023-03-31T02:24:08.808
;; generated by simon
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

((NIL)
  (T . T)
  (F)
  (ADD1)
  (AND)
  (APPEND LAMBDA
    (X Y) (COND ((NULL X) Y) ((QUOTE T) (CONS (CAR X) (APPEND (CDR X) Y)))))
  (APPLY)
  (ASSOC LAMBDA (X L) 
    (COND 
      ((NULL L) (QUOTE NIL)) 
      ((AND (CONSP (CAR L)) (EQ (CAAR L) X)) (CAR L)) 
      ((QUOTE T) (ASSOC X (CDR L)))))
  (ATOM)
  (CAR)
  (CAAAAR LAMBDA (X) (CAR (CAR (CAR (CAR X)))))
  (CAAADR LAMBDA (X) (CAR (CAR (CAR (CDR X)))))
  (CAAAR LAMBDA (X) (CAR (CAR (CAR X))))
  (CAADAR LAMBDA (X) (CAR (CAR (CDR (CAR X)))))
  (CAADDR LAMBDA (X) (CAR (CAR (CDR (CDR X)))))
  (CAADR LAMBDA (X) (CAR (CAR (CDR X))))
  (CAAR LAMBDA (X) (CAR (CAR X)))
  (CADAAR LAMBDA (X) (CAR (CDR (CAR (CAR X)))))
  (CADADR LAMBDA (X) (CAR (CDR (CAR (CDR X)))))
  (CADAR LAMBDA (X) (CAR (CDR (CAR X))))
  (CADDAR LAMBDA (X) (CAR (CDR (CDR (CAR X)))))
  (CADDDR LAMBDA (X) (CAR (CDR (CDR (CDR X)))))
  (CADDR LAMBDA (X) (CAR (CDR (CDR X))))
  (CADR LAMBDA (X) (CAR (CDR X)))
  (CDAAAR LAMBDA (X) (CDR (CAR (CAR (CAR X)))))
  (CDAADR LAMBDA (X) (CDR (CAR (CAR (CDR X)))))
  (CDAAR LAMBDA (X) (CDR (CAR (CAR X))))
  (CDADAR LAMBDA (X) (CDR (CAR (CDR (CAR X)))))
  (CDADDR LAMBDA (X) (CDR (CAR (CDR (CDR X)))))
  (CDADR LAMBDA (X) (CDR (CAR (CDR X))))
  (CDAR LAMBDA (X) (CDR (CAR X)))
  (CDDAAR LAMBDA (X) (CDR (CDR (CAR (CAR X)))))
  (CDDADR LAMBDA (X) (CDR (CDR (CAR (CDR X)))))
  (CDDAR LAMBDA (X) (CDR (CDR (CAR X))))
  (CDDDAR LAMBDA (X) (CDR (CDR (CDR (CAR X)))))
  (CDDDDR LAMBDA (X) (CDR (CDR (CDR (CDR X)))))
  (CDDDR LAMBDA (X) (CDR (CDR (CDR X))))
  (CDDR LAMBDA (X) (CDR (CDR X)))
  (CDR)
  (CONS)
  (CONSP)
  (COPY
    LAMBDA
    (X)
    (COND
      ((NULL X) (QUOTE NIL))
      ((ATOM X) X) ((QUOTE T) (CONS (COPY (CAR X)) (COPY (CDR X))))))
  (DEFINE)
  (DIFFERENCE)
  (DIVIDE
    LAMBDA (X Y) (CONS (QUOTIENT X Y) (CONS (REMAINDER X Y) (QUOTE NIL))))
  (DOC)
  (EFFACE 
    LAMBDA (X L) (COND ((NULL L) (QUOTE NIL)) 
                    ((EQUAL X (CAR L)) (CDR L)) 
                    ((QUOTE T) (RPLACD L (EFFACE X (CDR L))))))
  (ERROR)
  (EQ)
  (EQUAL)
  (EVAL)
  (FACTORIAL
    LAMBDA (N) (COND ((EQ N 1) 1) (T (TIMES N (FACTORIAL (SUB1 N))))))
  (FIXP)
  (GENSYM)
  (GET
    LAMBDA
    (X Y)
    (COND
      ((NULL X) (QUOTE NIL))
      ((EQ (CAR X) Y) (CAR (CDR X))) ((QUOTE T) (GET (CDR X) Y))))
  (GREATERP)
  (INTEROP)
  (INTERSECTION
    LAMBDA
    (X Y)
    (COND
      ((NULL X) (QUOTE NIL))
      ((MEMBER (CAR X) Y) (CONS (CAR X) (INTERSECTION (CDR X) Y)))
      ((QUOTE T) (INTERSECTION (CDR X) Y))))
  (LENGTH
    LAMBDA
    (L) (COND ((EQ NIL L) 0) ((CONSP (CDR L)) (ADD1 (LENGTH (CDR L)))) (T 0)))
  (LESSP)
  (MAPLIST LAMBDA (L F) (COND ((NULL L) NIL) ((QUOTE T) (CONS (F (CAR L)) (MAPLIST (CDR L) F)))))
  (MEMBER
    LAMBDA
    (A X)
    (COND
      ((NULL X) (QUOTE F))
      ((EQ A (CAR X)) (QUOTE T)) ((QUOTE T) (MEMBER A (CDR X)))))
  (MINUSP LAMBDA (X) (LESSP X 0))
  (NOT LAMBDA (X) (COND (X (QUOTE NIL)) ((QUOTE T) (QUOTE T))))
  (NULL LAMBDA (X) (COND ((EQUAL X NIL) (QUOTE T)) (T (QUOTE F))))
  (NUMBERP)
  (OBLIST)
  (ONEP LAMBDA (X) (EQ X 1))
  (PAIR
    LAMBDA
    (X Y)
    (COND
      ((AND (NULL X) (NULL Y)) NIL)
      ((NULL X) (ERROR (QUOTE F2)))
      ((NULL Y) (ERROR (QUOTE F3)))
      (T (CONS (CONS (CAR X) (CAR Y)) (PAIR (CDR X) (CDR Y))))))
  (PAIRLIS LAMBDA (X Y A) 
    (COND 
      ((NULL X) A) 
      ((QUOTE T) (CONS (CONS (CAR X) (CAR Y)) (PAIRLIS (CDR X) (CDR Y) A)))))
  (PLUS)
  (PRETTY)
  (PRINT)
  (PROP
    LAMBDA
    (X Y U)
    (COND
      ((NULL X) (U)) ((EQ (CAR X) Y) (CDR X)) ((QUOTE T) (PROP (CDR X) Y U))))
  (QUOTE LAMBDA (X) X)
  (QUOTIENT)
  (RANGE LAMBDA (N M) (COND ((LESSP M N) (QUOTE NIL)) ((QUOTE T) (CONS N (RANGE (ADD1 N) M)))))
  (READ)
  (REMAINDER)
  (REPEAT
    LAMBDA (N X) (COND ((EQ N 0) NIL) (T (CONS X (REPEAT (SUB1 N) X)))))
  (RPLACA)
  (RPLACD)
  (SET)
  (SUB1 LAMBDA (N) (DIFFERENCE N 1))
  (SUB2 LAMBDA (A Z) 
    (COND 
      ((NULL A) Z) 
      ((EQ (CAAR A) Z) (CDAR A)) 
      ((QUOTE T) (SUB2 (CDAR A) Z))))
  (SUBLIS LAMBDA (A Y) (COND ((ATOM Y) (SUB2 A Y)) ((QUOTE T) (CONS))))
  (SUBST LAMBDA (X Y Z) 
    (COND 
      ((EQUAL Y Z) X) 
      ((ATOM Z) Z) 
      ((QUOTE T) (CONS (SUBST X Y (CAR Z)) (SUBST X Y (CDR Z))))))
  (SYSIN)
  (SYSOUT) (TERPRI) (TIMES) (TRACE) (UNTRACE) (ZEROP LAMBDA (N) (EQ N 0)))
