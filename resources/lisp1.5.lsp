;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Beowulf  Sysout file generated at 2023-03-30T09:40:36.483
;; generated by simon
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

((NIL)
  (T . T)
  (F)
  (ADD1)
  (AND)
  (APPEND)
  (APPLY)
  (ATOM)
  (CAR)
  (CDR)
  (CONS)
  (COPY LAMBDA (X) 
    (COND ((NULL X) (QUOTE NIL)) 
      ((ATOM X) X) 
      ((QUOTE T) (CONS (COPY (CAR X)) (COPY (CDR X))))))
  (DEFINE)
  (DIFFERENCE)
  (DIVIDE LAMBDA (X Y) (CONS (QUOTIENT X Y) (CONS (REMAINDER X Y) (QUOTE NIL))))
  (ERROR)
  (EQ)
  (EQUAL)
  (EVAL)
  (FIXP)
  (GENSYM)
  (GET LAMBDA (X Y) 
    (COND ((NULL X) (QUOTE NIL)) 
      ((EQ (CAR X) Y) (CAR (CDR X))) 
      ((QUOTE T) (GET (CDR X) Y))))
  (GREATERP)
  (INTEROP)
  (INTERSECTION LAMBDA (X Y) 
    (COND ((NULL X) (QUOTE NIL)) 
      ((MEMBER (CAR X) Y) (CONS (CAR X) (INTERSECTION (CDR X) Y))) 
      ((QUOTE T) (INTERSECTION (CDR X) Y))))
  (LENGTH LAMBDA (L) (COND ((EQ NIL L) 0) (T (ADD1 (LENGTH (CDR L))))))
  (LESSP)
  (MEMBER LAMBDA (A X) 
    (COND ((NULL X) (QUOTE F)) 
        ((EQ A (CAR X)) (QUOTE T)) 
        ((QUOTE T) (MEMBER A (CDR X)))))
  (MINUSP LAMBDA (X) (LESSP X 0))
  (NULL LAMBDA (X) (COND ((EQUAL X NIL) (QUOTE T)) (T (QUOTE F))))
  (NUMBERP)
  (OBLIST)
  (ONEP LAMBDA (X) (EQ X 1))
  (PAIR LAMBDA (X Y) 
    (COND ((AND (NULL X) (NULL Y)) NIL)
        ((NULL X) (ERROR 'F2))
        ((NULL Y) (ERROR 'F3))
        (T (CONS (CONS (CAR X) (CAR Y)) (PAIR (CDR X) (CDR Y))))))
  (PLUS)
  (PRETTY)
  (PRINT)
  (PROP LAMBDA (X Y U) 
    (COND ((NULL X) (U)) 
      ((EQ (CAR X) Y) (CDR X)) 
      ((QUOTE T) (PROP (CDR X) Y U))))
  (QUOTIENT)
  (READ)
  (REMAINDER) 
  (REPEAT LAMBDA (N X)
    (COND ((EQ N 0) NIL)
        (T (CONS X (REPEAT (SUB1 N) X)))))
  (RPLACA) 
  (RPLACD) 
  (SET)
  (SUB1 LAMBDA (N) (DIFFERENCE N 1)) 
  (SYSIN) 
  (SYSOUT) 
  (TERPRI)
  (TIMES)
  (TRACE)
  (UNTRACE)
  (ZEROP LAMBDA (N) (EQ N 0)))
